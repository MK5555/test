"use strict"
//–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Å—Ç—Ä–æ–∫ - utf-16
//–≤—Å–µ–≥–¥–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∫–æ–¥–∏—Ä–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

//–≤—ã–≤–µ—Å—Ç–∏ —Å–∏–º–≤–æ–ª—ã –≤ —é–Ω–∏–∫–æ–¥–µ
console.log("\u00a9")
console.log("str".length)
//—Å–∫–æ–±–∫–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± charAt - –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π
//–Ω–æ –µ—Å—Ç—å —Ä–∞–∑–Ω–∏—Ü–∞ –ø–µ—Ä–≤–æ–µ –≤–µ—Ä–Ω–µ—Ç undefined –¥–ª—è
//–Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ —Å–∏–º–≤–æ–ª–∞ –≤—Ç–æ—Ä–æ–π –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
console.log("str"[0],"str".charAt(2))
//–ø–µ–±—Ä–∞—Ç—å —Å—Ç—Ä–æ–∫—É –º–æ–∂–Ω–æ —Ç–∞–∫
for (let char of "Hello") {
    console.log(char);
}
let list = ["Hello","f"]
for (let num of list) {
    console.log(num);
}
//**TODO —Å—Ç—Ä–æ–∫–∏ –≤ js –Ω–µ–∏–∑–º–µ–Ω—è–º—ã

//–∫ —Å—Ç—Ä–æ–∫–µ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω—è—Ç—å –º–µ—Ç–æ–¥—ã
//toLowerCase() –∏ toUpperCase()

//–¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å .indexOf

let str = 'Widget with id';
//–≤–µ—Ä–Ω–µ—Ç -1 –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ—Ç
//–≤–µ—Ä–Ω–µ—Ç –ø–æ–∑–∏—Ü—é –Ω–∞—á–∞–ª–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
console.log(str.indexOf('Widget'))
//–¥–ª—è –ø–æ–∏—Å–∫–∞ —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏
//str.lastIndexOf(substr, position)

let str2 = '–û—Å–ª–∏–∫ –ò–∞-–ò–∞ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –Ω–∞ –≤–∏–∞–¥—É–∫';

let target = '–ò–∞'; // —Ü–µ–ª—å –ø–æ–∏—Å–∫–∞

let pos = 0;
while (true) {
    let foundPos = str2.indexOf(target, pos);
    if (foundPos == -1) break;
    console.log( `–ù–∞–π–¥–µ–Ω–æ —Ç—É—Ç: ${foundPos}` );
    pos = foundPos + 1 ; // –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–æ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∑–∏—Ü–∏–∏
                         //target.length –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ –º–æ–∂–Ω–æ
                         //–ø—Ä–∏–±–∞–≤–ª—è—Ç—å —Ç–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
}

// –¥–ª—è indexOf –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
//~ (not) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -(x+1)
//—Ç.–µ. –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤
//–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–º –∫–æ–¥–µ
console.log( ~2 ); // -3, —Ç–æ –∂–µ, —á—Ç–æ -(2+1)
console.log( ~1 ); // -2, —Ç–æ –∂–µ, —á—Ç–æ -(1+1)
console.log( ~0 ); // -1, —Ç–æ –∂–µ, —á—Ç–æ -(0+1)
console.log( ~-1 ); // 0, —Ç–æ –∂–µ, —á—Ç–æ -(-1+1)
console.log( ~-3 ); // 0, —Ç–æ –∂–µ, —á—Ç–æ -(-1+1)
console.log( ~52 ); // 0, —Ç–æ –∂–µ, —á—Ç–æ -(-1+1)

//indexOf –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–æ–º–ø–∞–∫—Ç–Ω–µ–µ
//–Ω–æ —Ç–∞–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è —É—Å—Ç–∞—Ä–µ–≤—à–µ–π
//—Ç.–∫. –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–ª—å–∫–æ –¥–æ 32 —Å—Ç–µ–ø–µ–Ω–∏
//–∞ –¥–∞–ª—å—à–µ –≤—ã–¥–∞–µ—Ç –Ω—É–ª–∏
if (~str.indexOf("W")){
   console.log("–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –µ—Å—Ç—å")
}

//–º–µ—Ç–æ–¥—ã includes
console.log("INCLUDES")
console.log( "Widget with id".includes("Widget"))
console.log("Hello".includes("Bye"))
console.log("Midget".includes("id"))
console.log("Midget".includes("id", 3))
console.log("Widget".startsWith("Wid"))//prefix
console.log("Widget".endsWith("get"))  //suffix
//–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
let str3 = "stringify"
console.log(str3.slice(0,5))
console.log(str3.slice(1,3))
console.log(str3.slice(1))
//–∏–∑ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –º–æ–∂–Ω–æ –≤–¥–µ–ª–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
//–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤, –æ–Ω–∏ –∑–Ω–∞—á–∞—Ç —Ç–æ,
//—á—Ç–æ –æ—Ç—Å—á–µ—Ç –±—É–¥–µ—Ç –≤–µ—Å—Ç–∏—Å—å —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏
//—Ç.–µ. -1 —ç—Ç–æ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª
console.log(str3.slice(-4, -1))

//str.substring(start [, end])
//—Ç–æ–∂–µ —á—Ç–æ –∏ slice –Ω–æ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å
//start > —á–µ–º end
//slice –≤–µ—Ä–Ω–µ—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
console.log(str.substring(6, 2))
console.log(str.substring(2, 6))
console.log(str.substring(-2, -6))


//str.substr(start [, length])
//–ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∫–∞–∑–∞—Ç—å –¥–ª–∏–Ω—É –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
//—Å –ø–æ–∑–∏—Ü–∏–∏ –∞ –Ω–µ –∫–æ–Ω–µ—á–Ω—É—é –ø–æ–∑–∏—Ü–∏—é

console.log(str.substr(2, 4))



// slice(start, end)
// –æ—Ç start –¥–æ end (–Ω–µ –≤–∫–ª—é—á–∞—è end)
// –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

// substring(start, end)
// –º–µ–∂–¥—É start –∏ end
// –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–≤–Ω–æ–∑–Ω–∞—á–Ω—ã 0

// substr(start, length) 	length —Å–∏–º–≤–æ–ª–æ–≤,
//     –Ω–∞—á–∏–Ω–∞—è –æ—Ç start
// –∑–Ω–∞—á–µ–Ω–∏–µ start –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º

//—á—Ç–æ–±—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
//localeCompare

// –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –µ—Å–ª–∏ str –º–µ–Ω—å—à–µ str2.
//     –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –µ—Å–ª–∏ str –±–æ–ª—å—à–µ str2.
// 0, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω—ã.

console.log('√ñsterreich'.localeCompare('Zealand'))

//—Å—É—Ä—Ä–æ–≥–∞—Ç–Ω—ã–µ –ø–∞—Ä—ã
//–∑–∞–ø–∏—Å—å —Å–∏–º–≤–æ–ª–æ–≤ –¥–≤—É–º—è 16–±—Ç–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
console.log('üòÇ','üòÇ'.length )
console.log('üòÇ'[0],'üòÇ'[1] )
console.log('üòÇ','üòÇ'.length )
//–ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É
//  –µ—Å–ª–∏ –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0xd800..0xdbff,
//  —Ç–æ —ç—Ç–æ ‚Äî –ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω–æ–π –ø–∞—Ä—ã.
// –≤—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å ‚Äî –∏–º–µ–µ—Ç –∫–æ–¥ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0xdc00..0xdfff
console.log('üòÇ'.charCodeAt(0))

//–Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
//–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø–æ –≤–∏–¥—É –∑–Ω–∞–∫–∞
//–Ω–æ —Ä–∞–∑–Ω—ã—Ö –ø–æ –∫–æ–¥–∞–º
// s1 == s2//false
let s1 = 'S\u0307\u0323'; // SÃáÃ£, S + —Ç–æ—á–∫–∞ —Å–≤–µ—Ä—Ö—É + —Ç–æ—á–∫–∞ —Å–Ω–∏–∑—É
let s2 = 'S\u0323\u0307'; // SÃ£Ãá, S + —Ç–æ—á–∫–∞ —Å–Ω–∏–∑—É + —Ç–æ—á–∫–∞ —Å–≤–µ—Ä—Ö—É
//—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è

console.log(s1===s2)
console.log(s1.normalize()===s2.normalize(),s1.normalize())
//–ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏
//https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String


//task 1
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é ucFirst(str), –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é
// —Å—Ç—Ä–æ–∫—É str —Å –∑–∞–≥–ª–∞–≤–Ω—ã–º –ø–µ—Ä–≤—ã–º —Å–∏–º–≤–æ–ª–æ–º. –ù–∞–ø—Ä–∏–º–µ—Ä:

function ucFirst(str){
    //–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç —É—Å–ª–æ–≤–∏–µ —Ç–∞–∫ !str
    if (str.length < 0) {
        return str
    }
    return str[0].toUpperCase()+str.slice(1)
}
console.log(ucFirst("–≤–∞—Å—è"))

//task 2
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é checkSpam(str),
//     –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é true, –µ—Å–ª–∏ str
// —Å–æ–¥–µ—Ä–∂–∏—Ç 'viagra' –∏–ª–∏ 'XXX', –∞ –∏–Ω–∞—á–µ false.
// –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É:

function checkSpam(str){
    let strCheck = str.toUpperCase()
    let spamList = ['VIAGRA','xxxxx']
    for (let word of spamList){
        if (strCheck.includes(word.toUpperCase())){
            return true
        }
    }
    return false
}
console.log(checkSpam('buy ViAgRA now'))
console.log(checkSpam('free xxxxx'))
console.log(checkSpam("innocent rabbit"))
/*
checkSpam('buy ViAgRA now') == true
checkSpam('free xxxxx') == true
checkSpam("innocent rabbit") == false
 */

/*
–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é truncate(str, maxlength),
 –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ str
–∏, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç maxlength, –∑–∞–º–µ–Ω—è–µ—Ç
 –∫–æ–Ω–µ—Ü str –Ω–∞ "‚Ä¶", —Ç–∞–∫, —á—Ç–æ–±—ã –µ—ë –¥–ª–∏–Ω–∞ —Å—Ç–∞–ª–∞ —Ä–∞–≤–Ω–∞ maxlength.

–†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç–∞ –∂–µ —Å—Ç—Ä–æ–∫–∞,
–µ—Å–ª–∏ —É—Å–µ—á–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –ª–∏–±–æ, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ,
—É—Å–µ—á—ë–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
 */

function truncate(str,maxLen){
    if (maxLen < str.length){
        return str.slice(0,maxLen-1)+"..."
    }
    return str
}

console.log(truncate("–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!", 20))
console.log(truncate("–í–æ—Ç, —á—Ç–æ –º–Ω–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —Å–∫–∞–∑–∞—Ç—å –Ω–∞ —ç—Ç—É —Ç–µ–º—É:", 20))








